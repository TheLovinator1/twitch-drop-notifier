# Generated by Django 5.1rc1 on 2024-08-01 14:27

import auto_prefetch
import django.db.models.deletion
import django.db.models.manager
from django.db import migrations
from django.db.migrations.operations.base import Operation


class Migration(migrations.Migration):
    dependencies: list[tuple[str, str]] = [
        ("twitch_app", "0007_alter_dropcampaign_time_based_drops"),
    ]

    operations: list[Operation] = [
        migrations.AlterModelOptions(
            name="allow",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="benefit",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="benefitedge",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="channel",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="dropcampaign",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="game",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="image",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="owner",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="reward",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="rewardcampaign",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="timebaseddrop",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelOptions(
            name="unlockrequirements",
            options={"base_manager_name": "prefetch_manager"},
        ),
        migrations.AlterModelManagers(
            name="allow",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="benefit",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="benefitedge",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="channel",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="dropcampaign",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="game",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="image",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="owner",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="reward",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="rewardcampaign",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="timebaseddrop",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="unlockrequirements",
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterField(
            model_name="benefit",
            name="game",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="benefits",
                to="twitch_app.game",
            ),
        ),
        migrations.AlterField(
            model_name="benefit",
            name="owner_organization",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="benefits",
                to="twitch_app.owner",
            ),
        ),
        migrations.AlterField(
            model_name="benefitedge",
            name="benefit",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="benefit_edges",
                to="twitch_app.benefit",
            ),
        ),
        migrations.AlterField(
            model_name="dropcampaign",
            name="allow",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="drop_campaigns",
                to="twitch_app.allow",
            ),
        ),
        migrations.AlterField(
            model_name="dropcampaign",
            name="game",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="drop_campaigns",
                to="twitch_app.game",
            ),
        ),
        migrations.AlterField(
            model_name="dropcampaign",
            name="owner",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="drop_campaigns",
                to="twitch_app.owner",
            ),
        ),
        migrations.AlterField(
            model_name="reward",
            name="banner_image",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="banner_rewards",
                to="twitch_app.image",
            ),
        ),
        migrations.AlterField(
            model_name="reward",
            name="thumbnail_image",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="thumbnail_rewards",
                to="twitch_app.image",
            ),
        ),
        migrations.AlterField(
            model_name="rewardcampaign",
            name="game",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reward_campaigns",
                to="twitch_app.game",
            ),
        ),
        migrations.AlterField(
            model_name="rewardcampaign",
            name="image",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reward_campaigns",
                to="twitch_app.image",
            ),
        ),
        migrations.AlterField(
            model_name="rewardcampaign",
            name="unlock_requirements",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reward_campaigns",
                to="twitch_app.unlockrequirements",
            ),
        ),
        migrations.AlterField(
            model_name="timebaseddrop",
            name="game",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="time_based_drops",
                to="twitch_app.game",
            ),
        ),
        migrations.AlterField(
            model_name="timebaseddrop",
            name="owner_organization",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="time_based_drops",
                to="twitch_app.owner",
            ),
        ),
    ]
