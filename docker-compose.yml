services:
  # ttvdrops:
  #   container_name: ttvdrops
  #   image: ghcr.io/thelovinator1/ttvdrops:latest
  #   restart: always
  #   networks:
  #     - ttvdrops_redis
  #     - ttvdrops_db
  #     - ttvdrops_web
  #   environment:
  #     - SECRET_KEY=${SECRET_KEY}
  #     - DEBUG=${DEBUG}
  #     - ADMIN_EMAIL=${ADMIN_EMAIL}
  #     - EMAIL_HOST_USER=${EMAIL_HOST_USER}
  #     - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
  #     - REDIS_HOST=redis
  #     - REDIS_PASSWORD=${REDIS_PASSWORD}
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - /mnt/Fourteen/Docker/ttvdrops/staticfiles:/app/staticfiles
  web:
    container_name: ttvdrops_web
    image: lscr.io/linuxserver/nginx:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    expose:
      - 80
      - 443
    volumes:
      - /mnt/Fourteen/Docker/ttvdrops/Nginx:/config
    networks:
      - ttvdrops_web
  redis:
    container_name: ttvdrops_redis
    image: redis:latest
    restart: always
    user: "1000:1000"
    ports:
      - 6380:6379
    command: /bin/sh -c 'redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes'
    volumes:
      - /mnt/Fourteen/Docker/ttvdrops/Redis:/data
    networks:
      - ttvdrops_redis
  postgres:
    container_name: ttvdrops_postgres
    image: postgres:16
    # user: "1000:1000"
    ports:
      - 5433:5432
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - /mnt/Fourteen/Docker/ttvdrops/Postgres:/var/lib/postgresql/data
    networks:
      - ttvdrops_db

networks:
  ttvdrops_redis:
    driver: bridge
  ttvdrops_db:
    driver: bridge
  ttvdrops_web:
    driver: bridge
